// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserList Test matches snapshot 1`] = `
<UserList
  onSelect={[MockFunction]}
  selectable={true}
  users={
    Array [
      Object {
        "id": 0,
        "name": "test",
        "username": "test",
      },
    ]
  }
>
  <styled.ul>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "lastClassName": "bFHdpU",
            "rules": Array [
              "
",
            ],
          },
          "displayName": "styled.ul",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "ul",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <ul
        className="sc-bwzfXH bFHdpU"
      >
        <styled.li
          key="user-0"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": true,
                  "lastClassName": "hSlyzF",
                  "rules": Array [
                    "
  height:2em;
  width:100%;

  .list-item-user {
    width:100%;
    height:100%;
    display:block;
    padding:0 1em;
    ",
                    "
  
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;

  
  -webkit-flex-wrap: nowrap;
      -moz-flex-wrap: nowrap;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;

  
  -webkit-flex-direction: row;
      -moz-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;

  
  -webkit-justify-content: flex-start;
      -moz-justify-content: flex-start;
      -ms-justify-content: flex-start;
          justify-content: flex-start;
            -ms-flex-pack: flex-start;

  
  -webkit-align-items: center;
      -moz-align-items: center;
      -ms-align-items: center;
          align-items: center;

",
                    ";
    button {
      display:none;
    }
  }
  .list-item-user:hover {
    background-color:",
                    "rgba(250, 243, 221, 1)",
                    ";
  }
",
                  ],
                },
                "displayName": "styled.li",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "li",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <li
              className="sc-htpNat hSlyzF"
            >
              <label
                className="list-item-user"
              >
                <span
                  className="name"
                >
                  test
                </span>
                <Button
                  onClick={[Function]}
                >
                  <styled.button
                    onClick={[Function]}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": true,
                            "lastClassName": "cCNCGa",
                            "rules": Array [
                              "
  width: 100%;
  font-size:1em;
  border:none;
  padding: 1em 1em;
  background-color:transparent;

  .material-icons {
    vertical-align:bottom;
    &.left {
      margin-right:.2em;
    }
  }
  
  transition: all 0.2s ease;
  &:hover {
    background-color:",
                              "rgba(184, 242, 230, 1)",
                              "
  }
  &:active {
    transform:translateY(2px);
  }
  
  &[type=submit] {
    background-color:",
                              "rgba(184, 242, 230, 1)",
                              ";
    &:hover {
      background-color:",
                              "rgba(250, 243, 221, 1)",
                              ";
    }
  }
",
                            ],
                          },
                          "displayName": "styled.button",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": "button",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                    >
                      <button
                        className="sc-bdVaJa cCNCGa"
                        onClick={[Function]}
                      />
                    </StyledComponent>
                  </styled.button>
                </Button>
              </label>
            </li>
          </StyledComponent>
        </styled.li>
      </ul>
    </StyledComponent>
  </styled.ul>
</UserList>
`;
